#ifndef NEMO_CUDA_GLOBAL_QUEUE_CU_H
#define NEMO_CUDA_GLOBAL_QUEUE_CU_H

/*! \file globalQueue.cu_h Global queue */

/* Copyright 2010 Imperial College London
 *
 * This file is part of nemo.
 *
 * This software is licenced for non-commercial academic use under the GNU
 * General Public Licence (GPL). You should have received a copy of this
 * licence along with nemo. If not, see <http://www.gnu.org/licenses/>.
 */

#include <cuda_runtime.h>

/*! The global queue contains synapse warp indices */
typedef unsigned gq_entry_t;


/*! Kernel-side data structure for the global queue
 *
 * This is only used for parameter passing. The actual data is managed by the
 * class GlobalQueue.
 */
struct gq_dt {

	gq_dt() : pitch(0) { }

	gq_dt(gq_entry_t* data, unsigned* fill, size_t pitch) :
		data(data), fill(fill), pitch(pitch) { }

	/* The actual queue data */
	gq_entry_t* data;

	/* fill level (in words) for each source/target partition-specific queue.
	 * 'fill' is an array with one entry for each such queue. */
	unsigned* fill;

	/*! number of words in each source/target partition-specific queue */
	size_t pitch;
};

#endif
