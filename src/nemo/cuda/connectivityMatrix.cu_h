#ifndef CONNECTIVITY_MATRIX_CU_H
#define CONNECTIVITY_MATRIX_CU_H

//! \file connectivityMatrix.cu_h

/* Copyright 2010 Imperial College London
 *
 * This file is part of nemo.
 *
 * This software is licenced for non-commercial academic use under the GNU
 * General Public Licence (GPL). You should have received a copy of this
 * licence along with nemo. If not, see <http://www.gnu.org/licenses/>.
 */

#include <cuda_runtime.h>

#include "kernel.cu_h"
#include "types.h"

/* \brief Synapse encoding/decoding
 *
 * Forward synapse: target neuron
 * Reverse synapse: source neuron + delay
 */


// planes of forward connectivity matrix
#define FCM_ADDRESS 0        // target partition and neuron
#define FCM_WEIGHT 1         // float packed as int
#define FCM_SUBMATRICES 2

cudaError setFcmPlaneSize(size_t planeSize);

synapse_t f_nullSynapse();

rsynapse_t r_packSynapse(
		unsigned sourcePartition,
		unsigned sourceNeuron,
		unsigned delay);

#define INVALID_REVERSE_SYNAPSE ((rsynapse_t) ~0)

unsigned sourceNeuron(rsynapse_t rsynapse);
unsigned sourcePartition(rsynapse_t rsynapse);
unsigned r_delay1(rsynapse_t rsynapse);


cudaError
configureReverseAddressing(
        size_t* r_pitch,
        uint32_t* const* r_address,
        weight_dt* const* r_stdp,
        uint32_t* const* r_faddress,
		size_t len);

#endif
