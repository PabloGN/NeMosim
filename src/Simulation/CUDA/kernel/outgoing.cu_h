#ifndef TARGET_PARTITIONS_CU_H
#define TARGET_PARTITIONS_CU_H

/* For L1 spike delivery we need to know to which target partitions each firing
 * neuron has outgoing synapses. We store this information in a matrix indexed
 * by partition, neuron, and delay. Each entry is a row listing partition
 * targets. Empty entries are set to -1. */

#include <cuda_runtime.h>

#include "nemo_cuda_types.h"


/* Each outgoing spike group specifies
 *
 * 1. target partition (up to 256)
 * 2. delay (up to 256)
 */
typedef uchar2 outgoing_t;

__host__ outgoing_t make_outgoing(pidx_t partition, delay_t delay);

const outgoing_t INVALID_OUTGOING = { 0, 0 };

__host__ bool operator<(const outgoing_t& a, const outgoing_t& b);

__host__ void setOutgoingPitch(size_t targetPitch);


/* Return address at beginning of given row */
__host__ __device__ 
size_t
outgoingRow(
		pidx_t partition,
		nidx_t neuron,
		size_t pitch);


#endif
