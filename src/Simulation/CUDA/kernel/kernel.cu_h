#ifndef KERNEL_CU_H
#define KERNEL_CU_H

#define MAX_THREAD_BLOCKS 128
#define THREADS_PER_BLOCK 256

#define DELAY_BITS 5
#define MAX_DELAY (1<<5)
#define MAX_STDP_DELAY MAX_DELAY
#define STDP_WINDOW_SIZE 64

#define NEURON_BITS 10
#define MAX_PARTITION_SIZE (1<<NEURON_BITS)

#define PARTITION_BITS 7
#define MAX_PARTITION_COUNT (1<<PARTITION_BITS)

//! \todo move some of this to connectivityMatrix
#define SYNAPSE_BITS (32-NEURON_BITS-PARTITION_BITS-DELAY_BITS)
#define MAX_SYNAPSES_PER_DELAY (1<<SYNAPSE_BITS)

#define PARTITION_COUNT gridDim.x
#define CURRENT_PARTITION blockIdx.x

#define TRUE 1
#define FALSE 0

// neuron parameter arrays
#define PARAM_A 0
#define PARAM_B 1
#define PARAM_C 2
#define PARAM_D 3
#define STATE_U 4
#define STATE_V 5
#define NVEC_COUNT 6


/* Sometimes we put a pointer in a (small) integer. The device has a 32b
 * address space, so uint32_t is suitable. However, when running in emulation
 * mode the /emulated/ device pointers will be whatever is used by the host
 * system. We just assume that 64 bits is enough. */
#ifdef __DEVICE_EMULATION__
#define DEVICE_UINT_PTR_T uint64_t
#else
//! \todo should probably make this uint32_t explicitly
#define DEVICE_UINT_PTR_T uint
#endif

#endif
