name:                       nemo
version:                    0.4.9
synopsis:                   Spiking neural network simulator
author:                     Andreas Fidjeland
maintainer:                 Andreas Fidjeland <andreas.fidjeland@imperial.ac.uk>
cabal-version:              >= 1.2
stability:                  alpha
build-type:                 Simple

extra-source-files:         configure, conf/version
extra-tmp-files:            nemo.buildinfo


-- TODO: use autoconf to find CUDA
flag CUDA
    description:            Enable support for CUDA backend
    default:                True

-- TODO: use autoconf to find Matlab
flag Matlab
    description:            Enable support for Matlab client
    default:                False

flag Debug
    description:            Enable debugging
    default:                False

flag Examples
    description:            Build stand-alone example networks
    default:                False

flag Test
    description:            Create binary which runs all the tests
    default:                False

flag Benchmark
    description:            Create binary which runs benchmarks
    default:                False


executable nemo
    main-is:                Nemo.hs
    other-modules:          Construction,
                            Construction.Axon,
                            Construction.Construction,
                            Construction.Izhikevich,
                            Construction.Network,
                            Construction.Neuron,
                            Construction.Neurons,
                            Construction.Parameterisation,
                            Construction.Rand,
                            Construction.Randomised.Topology,
                            Construction.Randomised.Synapse,
                            Construction.Spiking,
                            Construction.Synapse,
                            Construction.Topology,
                            ExternalClient,
                            NemoBackend_Client,
                            Options,
                            Protocol,
                            Server,
                            Simulation,
                            Simulation.Backend,
                            Simulation.CPU,
                            Simulation.CUDA.Options,
                            Simulation.FiringStimulus,
                            Simulation.Options,
                            Simulation.Queue,
                            Simulation.Pipelined,
                            Simulation.Remote,
                            Simulation.Run,
                            Simulation.SpikeQueue,
                            Simulation.Statistics,
                            Simulation.STDP,
                            Simulation.STDP.Options,
                            Types,
                            Util.Assocs

    if flag(Benchmark)
        other-modules:      Benchmark,
                            Examples.Ring,
                            Examples.Random1k
        cpp-options:        -DBENCHMARK_ENABLED

    if flag(Test)
        other-modules:      Test.RunTests,
                            Test.Comparative,
                            Test.Construction.Axon,
                            Test.Construction.Synapse,
                            Test.Examples.Smallworld,
                            Test.Examples.Random1k,
                            Test.Examples.Ring,
                            Test.Files,
                            Test.Network.Client,
                            Test.Regression,
                            Test.Simulation.Run,
                            Examples.Smallworld,
                            Examples.Random1k

        hs-source-dirs:     testsuite
        build-depends:      HUnit, filepath, directory
        cpp-options:        -DTEST_ENABLED

        if flag(Matlab)
            other-modules:  Test.ClientAPI.Matlab

    if flag(Matlab)
        cpp-options:        -DMATLAB_ENABLED


    if flag(CUDA)
        other-modules:      Simulation.CUDA,
                            Simulation.CUDA.Address,
                            Simulation.CUDA.Configuration,
                            Simulation.CUDA.DeviceProperties,
                            Simulation.CUDA.KernelFFI,
                            Simulation.CUDA.Memory,
                            Simulation.CUDA.Mapping,
                            Simulation.CUDA.Options,
                            Simulation.CUDA.Probe,
                            Simulation.CUDA.State
        cpp-options:        -DCUDA_ENABLED
        extra-libraries:    cuIzhikevich cudart cutil
        extra-lib-dirs:     /usr/local/cuda/lib ext/NVIDIA_CUDA_SDK/lib dist/build/cuda/lib
        include-dirs:       src/Simulation/CUDA/kernel /usr/local/cuda/include

    -- We have several test scripts. These should really be replaced by scripts
    -- which are loaded dynamically by the main nemo binary.
    if flag(examples)
        other-modules:      Examples.Random1k,
                            Examples.Random1kRun,
                            Examples.Ring,
                            Examples.RingRun,
                            Examples.Smallworld,
                            Examples.SmallworldRun,
                            NSim

        cpp-options:        -DEXAMPLES_ENABLED

    hs-source-dirs:         src, dist/build/thrift/gen-hs

    build-depends:          array >= 0.1
    build-depends:          base
    build-depends:          containers
    build-depends:          haskell98
    build-depends:          mtl
    build-depends:          network
    build-depends:          old-time
    build-depends:          parallel
    build-depends:          QuickCheck < 2.0
    build-depends:          random
    build-depends:          Thrift
    if !os(windows)
        build-depends:      unix

    extensions:             DeriveDataTypeable

    ghc-options:            -threaded -O2

    if flag(debug)
        ghc-options:        -fno-ignore-asserts
