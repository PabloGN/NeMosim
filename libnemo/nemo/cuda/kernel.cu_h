#ifndef KERNEL_CU_H
#define KERNEL_CU_H

/* Copyright 2010 Imperial College London
 *
 * This file is part of nemo.
 *
 * This software is licenced for non-commercial academic use under the GNU
 * General Public Licence (GPL). You should have received a copy of this
 * licence along with nemo. If not, see <http://www.gnu.org/licenses/>.
 */

#include <nemo/internal_types.h>
#include <nemo/config.h>

#define FIXPOINT_SATURATION

#define THREADS_PER_BLOCK 256

#define DELAY_BITS 6
#define MAX_DELAY (1<<DELAY_BITS)
#define MAX_STDP_DELAY MAX_DELAY
#define STDP_WINDOW_SIZE 64

#define NEURON_BITS 10
#define MAX_PARTITION_SIZE (1<<NEURON_BITS)

#define PARTITION_BITS 10

/*! We use one partition per thread block, so this is also the maximum number
 * of thread blocks */
#define MAX_PARTITION_COUNT (1<<PARTITION_BITS)

// Note that this warp count may not be correct, although it matches the warp
// count for current high-end devices
#define WARP_SIZE 32
#define WARPS_PER_BLOCK (THREADS_PER_BLOCK / WARP_SIZE)

#define PARTITION_COUNT gridDim.x
#define CURRENT_PARTITION blockIdx.x

/* Floating-point neuron parameters */
#define PARAM_A 0
#define PARAM_B 1
#define PARAM_C 2
#define PARAM_D 3
#define PARAM_SIGMA 4 // for gaussian RNG
#define NEURON_FLOAT_PARAM_COUNT 5

/* Floating-point neuron state variables */
#define STATE_U 0
#define STATE_V 1
#define NEURON_FLOAT_STATE_COUNT 2

/* Unsigned neuron state variables */
#define STATE_RNG  0 // use STATE_RNG+plane
#define STATE_RNG0 0
#define STATE_RNG1 1
#define STATE_RNG2 2
#define STATE_RNG3 3
#define NEURON_UNSIGNED_STATE_COUNT 4

/* If kernel timing is enabled (NEMO_CUDA_KERNEL_TIMING), device cycle counters
 * will be used at run-time to record the number of cycles spent in different
 * phases of the simulation kernel.
 *
 * Counters are specified using numeric indices. Some care must be taken to
 * ensure that the counter counts specified here matches what's used in the
 * different kernels, and furthermore that the counters used there match what's
 * used when reading back. */

#define CC_MAIN_COUNT 5
#define CC_GATHER_COUNT  4
#define CC_STDP_APPLY_COUNT 2

/* Factor by which to reduce cycle counts, in order to avoid overflow */
#define CC_MULT 1024

#endif
