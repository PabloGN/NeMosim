# TODO: move these into a separate CMake module

IF(WIN32)
	FIND_PROGRAM(MEX NAMES mex.bat)
	FIND_PROGRAM(MEXEXT NAMES mexext.bat)
ELSE(WIN32)
	FIND_PROGRAM(MEX NAMES matlab-mex mex)
	FIND_PROGRAM(MEXEXT NAMES mexext)
ENDIF(WIN32)


IF(NOT MEX STREQUAL MEX-NOTFOUND)

	# The input sources to MEX is mostly auto-generated. This is not part of
	# the main build process since user builds should not need to do this.

	IF(MEXEXT STREQUAL MEXEXT-NOTFOUND)
		MESSAGE(ERROR "Could not find mexext, so cannot determine correct MEX extension")
	ENDIF(MEXEXT STREQUAL MEXEXT-NOTFOUND)

	EXECUTE_PROCESS(
		COMMAND ${MEXEXT}
		OUTPUT_VARIABLE SUFFIX
		OUTPUT_STRIP_TRAILING_WHITESPACE
	)

	SET(MEX_INCLUDES
		-I${CMAKE_SOURCE_DIR}
		-I${CMAKE_BINARY_DIR} # for configured file
		-I${Boost_INCLUDE_DIR}
	)
	SET(MEX_OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/nemo_mex.${SUFFIX})
	SET(MEX_SOURCE ${CMAKE_CURRENT_SOURCE_DIR}/nemo_mex.cpp)
	SET(NEMO_LIB_DIR ${CMAKE_BINARY_DIR}/nemo/${CMAKE_CFG_INTDIR})
	SET(MEX_OUTPUT_DIR ${CMAKE_CURRENT_BINARY_DIR})

	FILE(MAKE_DIRECTORY ${MEX_OUTPUT_DIR})

	ADD_CUSTOM_COMMAND(
		OUTPUT ${MEX_OUTPUT}
		COMMAND ${MEX} ${MEX_INCLUDES} -L${NEMO_LIB_DIR} -lnemo ${MEX_SOURCE}
		WORKING_DIRECTORY ${MEX_OUTPUT_DIR}
		DEPENDS ${MEX_SOURCE}
	)

	ADD_CUSTOM_TARGET(mex-api ALL DEPENDS ${MEX_OUTPUT})

	ADD_DEPENDENCIES(mex-api nemo)

	IF(WIN32)
		SET(INSTALL_DIR Matlab)
	ELSE(WIN32)
		SET(INSTALL_DIR share/nemo/matlab)
	ENDIF(WIN32)

	INSTALL(
		FILES
			${MEX_OUTPUT}
			nemo.m
			nemoNetwork.m
			nemoConfiguration.m
			nemoSimulation.m
			example.m
		DESTINATION
			${INSTALL_DIR}
	)

ELSE(NOT MEX STREQUAL MEX-NOTFOUND)
	MESSAGE("MEX compiler not found. Skipping Matlab API generation") 
ENDIF(NOT MEX STREQUAL MEX-NOTFOUND)
